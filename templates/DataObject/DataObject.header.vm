#* @vtlvariable name="do" type="bumba.Table" *#
#* @vtlvariable name="database" type="bumba.Database" *#
#* @vtlvariable name="pk" type="bumba.Column" *#
#set($package="generated")
#if($pk.getJavaType() == "java.lang.Integer")
#set($pk_default = -1)
#else
#set($pk_default = "null")
#end
package $package;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import bumba.DataObject;
import bumba.EasyConnector;
#set($referenceColumns=$do.getForeignKeyReferences())
#foreach($reference in $referenceColumns)
import ${package}.$reference.getOwningTable().getCamelCaseName(true);
#end

public class $do.getCamelCaseName(true) implements DataObject {
## column definitions
## TODO: add default handling
    protected boolean isModified = false;
#if($pk)
    protected $pk.getJavaType() $pk.getCamelCaseName(false) = $pk_default;
#end
#foreach($column in $do.getColumns(false))
    protected ${column.getJavaType()} $column.getCamelCaseName(false) = null;
#end


    // foreign keys referencing this table
#foreach($reference in $referenceColumns)
#if($reference.isUnique())
    protected $reference.getOwningTable().getCamelCaseName(true) $reference.getOwningTable().getCamelCaseName(false);
#else
    protected List<$reference.getOwningTable().getCamelCaseName(true)> $reference.getOwningTable().getCamelCaseName(false);
#end
#end

    // references on this table (currently omitted)
#foreach($column in $do.getColumns())
#if($column.isReference())
#set($ref = $column.getReferencedColumn())
##protected $ref.getOwningTable().getCamelCaseName(true) $ref.getOwningTable().getCamelCaseName(false);##$ref.getCamelCaseName(true);
#end
#end