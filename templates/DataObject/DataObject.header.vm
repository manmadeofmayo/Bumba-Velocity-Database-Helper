#* @vtlvariable name="do" type="bumba.database.core.Table" *#
#* @vtlvariable name="database" type="bumba.database.core.Database" *#
#* @vtlvariable name="pk" type="bumba.database.core.Column" *#

#set($package="generated")
#if($pk.getJavaType() == "java.lang.Integer")
#set($pk_default = -1)
#else
#set($pk_default = "null")
#end
package $package;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.sql.Connection;
import java.sql.PreparedStatement;

## TODO: refactor these out, or include them in generated output
import bumba.database.core.DataConnector;
import bumba.database.core.ParentDataObject;

#set($referenceColumns=$do.getForeignKeyReferences())
#foreach($reference in $referenceColumns)
import ${package}.$reference.getOwningTable().getCamelCaseName(true);
#end

public class $do.getCamelCaseName(true) extends ParentDataObject {
## column definitions
## TODO: add default handling
    protected boolean isModified = false;
    #createVarDeclarations($do.getColumns())


    // foreign keys referencing this table
#createRefDeclarations($referenceColumns)